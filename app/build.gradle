apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'androidx.navigation.safeargs'


def applicationIdName = 'com.inz.z.note_book'
def libArrays = rootProject.ext.dependencies

android {
    compileSdkVersion APP_COMPILE_SDK_VERSION.toInteger()
//    buildToolsVersion "29.0.2"


    defaultConfig {
        applicationId applicationIdName
        minSdkVersion APP_MIN_SDK_VERSION.toInteger()
        targetSdkVersion APP_TARGET_SDK_VERSION.toInteger()
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }


//    flavorDimensions "versionCode"

//    dataBinding {
//        enabled = true
//    }
//    buildFeatures {
//        viewBinding = true
//    }
    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "UPDATE_VERSION_URL", UPDATE_VERSION_URL
        }
        debug {
            buildConfigField "String", "UPDATE_VERSION_URL", UPDATE_VERSION_URL

            applicationIdSuffix ".debug"
        }
    }

    greendao {
        schemaVersion GREEN_DAO_SCHEME_VERSION.toInteger()
        daoPackage "${applicationIdName}.database"
        targetGenDir 'src/main/java'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    productFlavors {

    }

    lint {
        baseline = file("lint-baseline.xml")
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libArrays['kotlin-stdlib']
    implementation libArrays['appcompat']
    implementation libArrays['core-ktx']
    testImplementation libArrays['test-core-ktx']
    testImplementation libArrays['junit']
    androidTestImplementation libArrays['test-ext-junit']
    androidTestImplementation libArrays['test-espresso-core']

    implementation project(':base')
//    implementation project(':calendar_view')

    implementation project(':slide_table')

    implementation libArrays['multidex']

    /* 添加 Android design  */
    implementation libArrays['material']
    implementation libArrays['recyclerview']
    implementation libArrays['cardview']
    implementation libArrays['exifinterface']
    implementation libArrays['fragment']
    implementation libArrays['constraintlayout']
    implementation libArrays['swiperefreshlayout']

    implementation libArrays['lifecycle-runtime']
    implementation libArrays['lifecycle-extensions']
    implementation libArrays['lifecycle-viewmodel-ktx']

    implementation libArrays['paging-runtime']
    implementation libArrays['paging-runtime-ktx']
    implementation libArrays['paging-common']
    implementation libArrays['paging-rxjava2']

    implementation libArrays['navigation-fragment']
    implementation libArrays['navigation-ui-ktx']
    implementation libArrays['navigation-ui']
    implementation libArrays['navigation-runtime']
//    implementation 'androidx.navigation:navigation-safe-args-generator:2.3.0'
//    implementation 'androidx.navigation:navigation-safe-args-gradle-plugin:2.3.0'


    implementation libArrays['work-runtime']
    implementation libArrays['work-runtime-ktx']
    implementation libArrays['work-rxjava2']
    implementation libArrays['work-gcm']
    androidTestImplementation libArrays['work-testing']


    /**
     * Glide 4 图片加载器 加载大型图片
     * */
    implementation libArrays['glide']
    kapt libArrays['glide-compiler']
//    // 转换
//    implementation 'jp.wasabeef:glide-transformations:4.0.0'

    /**
     * 环形图片
     * */
    implementation(libArrays['circleimageview']) {
        exclude group: 'com.android.support'
    }

    /**
     * GreenDao
     */
    implementation libArrays['greendao']
    implementation libArrays['greendao-generator']

    /**
     * 日历
     */
    implementation libArrays['calendarview']

    /**
     * 导出 Excel
     */
    // https://mvnrepository.com/artifact/net.sourceforge.jexcelapi/jxl
    implementation libArrays['jxl']
    implementation libArrays['kotlin-reflect']

}
